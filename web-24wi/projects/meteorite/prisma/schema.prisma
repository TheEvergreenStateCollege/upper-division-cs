generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  content   String?
  published Boolean  @default(false)
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
}

model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  username  String    @unique
  password  String
  Post      Post[]
  Product   Product[]
  updates   Update[]
}

model Product {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  name        String
  belongsToId String
  belongsTo   User     @relation(fields: [belongsToId], references: [id])
  updates     Update[]
}

model Update {
  id           String        @id @default(uuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime
  title        String        @db.VarChar(255)
  body         String
  status       UPDATE_STATUS @default(IN_PROGRESS)
  version      String?
  asset        String
  productId    String
  userId       String?
  product      Product       @relation(fields: [productId], references: [id])
  User         User?         @relation(fields: [userId], references: [id])
  updatePoints UpdatePoint[]
}

model UpdatePoint {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  name        String   @db.VarChar(255)
  description String
  updateId    String
  update      Update   @relation(fields: [updateId], references: [id])
}

enum UPDATE_STATUS {
  IN_PROGRESS
  LIVE
  DEPRECATED
  ARCHIVED
}

model User {
  id      Int       @id @default(autoincrement())
  createdAt DateTime @default(now())
  username  String  @unique
  password  String
  UsCity    UsCity[]
}

model USCity{
  id    Int   @id @default(autoincrement())
  name  String  @db.VarChar(255)
  createdAt DateTime  @default(now())
  latitude   Float
  longitude  Float
  autorId   Int
  User  User  @relation(fields: [authorId], references: [id])

}