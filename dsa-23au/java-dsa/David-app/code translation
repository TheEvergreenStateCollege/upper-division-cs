FUNCTION divisibleSubsetSize(k, s):
    // Step 1: Create an array to track the count of remainders
    remainderCount = Array of Zeros with size k

    int[] myArray, (k, s) 

     // Step 2: Count the remainders in the array
    FOR i FROM 0 TO size(s) - 1:
        remainderCount[s[i] % k] += 1

      remainderCount[s[i] % k] += 1  

     // Step 3: Initialize the result as the count of numbers divisible by k
    result = remainderCount[0]

     // Step 4: Calculate the size of the divisible subset
        result += Maximum of remainderCount[i] and remainderCount[k - i]

  
    // Step 5: Return the result
    RETURN result

    // Main function to read input and call the nonDivisibleSubset function

    // Step 1: Read input values
    PRINT "Enter the value of k:"
    READ k

    PRINT "Enter the array of integers (space-separated):"
    READ inputArray

    